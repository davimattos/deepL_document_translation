name: Deploy Frontend e Backend

on:
  push:
    branches:
      - github-actions

jobs:
  #-----------------------------------------------------------------
  # JOB 1: VERIFICAR QUAIS PASTAS FORAM ALTERADAS
  #-----------------------------------------------------------------
  changes:
    name: Detectar Mudanças
    runs-on: ubuntu-latest
    outputs:
      # Disponibiliza o resultado do filtro para outros jobs
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}

    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Usar 'paths-filter' para detectar mudanças
        uses: dorny/paths-filter@v3
        id: filter # Define um ID para este passo
        with:
          # Define os filtros. O nome 'frontend' e 'backend' é você quem escolhe.
          filters: |
            frontend:
              - 'packages/frontend/**'
            backend:
              - 'packages/backend/**'

  #-----------------------------------------------------------------
  # JOB 2: DEPLOY DO FRONTEND (SE NECESSÁRIO)
  #-----------------------------------------------------------------
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: changes # Depende do job 'changes' para rodar primeiro
    # A MÁGICA ACONTECE AQUI:
    # Este job só vai rodar se o output 'frontend' do job 'changes' for 'true'
    if: needs.changes.outputs.frontend == 'true'
    
    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 3. Instalar dependências e Buildar
        run: |
          npm ci
          npm run build --workspace=frontend

      - name: 4. Deploy do Frontend
        run: echo "Fazendo deploy do frontend..." # Substitua pelo seu script de deploy

  #-----------------------------------------------------------------
  # JOB 3: DEPLOY DO BACKEND (SE NECESSÁRIO)
  #-----------------------------------------------------------------
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: changes # Depende do job 'changes' para rodar primeiro
    # A MÁGICA ACONTECE AQUI:
    # Este job só vai rodar se o output 'backend' do job 'changes' for 'true'
    if: needs.changes.outputs.backend == 'true'

    steps:
      - name: 1. Checkout do código
        uses: actions/checkout@v4

      - name: 2. Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 3. Instalar dependências
        run: npm ci --omit=dev

      - name: 4. Deploy do Backend (Ex: SSH)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /caminho/para/o/projeto/no/servidor
            git pull origin main
            cd packages/backend
            npm install --omit=dev
            pm2 reload app-name